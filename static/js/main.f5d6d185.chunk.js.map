{"version":3,"sources":["components/Squares.js","components/helper.js","components/Board.js","components/GameInfo.js","components/App.js","index.js"],"names":["Squares","makeMoveAndCallback","props","makeMove","index","className","style","borderRadius","border","height","width","textAlign","fontSize","paddingTop","cursor","onClick","this","player","React","Component","AI","checkIfWin","movesArr","i","findEmptySpacesInArray","arr","emptySpacesArr","push","bestMove","minimax","currentBoardStateArr","emptySpaces","score","length","moves","move","backup","result","bestScore","Board","state","nextPlayer","winner","players","restart","setState","HUMAN","nextPlayerTemp","tempArr","a","playerStatus","alert","j","map","element","justifyContent","color","GameInfo","playerRN","margin","marginRight","App","currentPlayer","won","checkCurrentPlayer","display","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5d6d185.chunk.js","sourcesContent":["import React from 'react'\n\nclass Squares extends React.Component {\n    makeMoveAndCallback = () => {\n        this.props.makeMove(this.props.index,'O')\n    }\n    render() {\n        return (\n            <div className=\" \">\n                <div className=\"ui card square-tictac\" style={{ borderRadius: '0', border: '0.5px solid', height: '100px', width: '100px', textAlign: 'center', fontSize: '50px', paddingTop: '40%', cursor: 'pointer' }} onClick={this.makeMoveAndCallback}>{this.props.player}</div>\n            </div>\n        )\n    }\n}\n\nexport default Squares;","const human = 'O';\nconst AI = 'X';\n\nexport const checkIfWin = (movesArr, player) => {\n    let score = 'WIN';\n    for (let i = 0; i <= 2; i++) {\n        if (i === 0) {\n            if ((movesArr[0] == player && movesArr[4] == player && movesArr[8] == player) || (movesArr[2] == player && movesArr[4] == player && movesArr[6] == player)) {\n                return score;\n            }\n        }\n        if ((movesArr[i * 3 + 0] == player && movesArr[i * 3 + 1] == player && movesArr[i * 3 + 2] == player) || (movesArr[0 * 3 + i] == player && movesArr[1 * 3 + i] == player && movesArr[2 * 3 + i] == player)) {\n            return score;\n        }\n    }\n    return null;\n}\nexport const findEmptySpacesInArray = (arr) => {\n    let emptySpacesArr = [];\n    for (let i = 0; i < 9; i++) {\n        if (arr[i] === '') {\n            emptySpacesArr.push(i)\n        }\n    }\n    return emptySpacesArr;\n}\nexport const bestMove = (arr, player) => {\n    let bestMove = minimax(arr, player);\n    return bestMove;\n}\nexport const minimax = (currentBoardStateArr, player) => {\n    let emptySpaces = findEmptySpacesInArray(currentBoardStateArr);\n    if (checkIfWin(currentBoardStateArr, AI)) {\n        return { score: 10 };\n    } else if (checkIfWin(currentBoardStateArr, human)) {\n        return { score: -10 };\n    } else if (emptySpaces.length === 0) {\n        return { score: 0 };\n    }\n    var moves = [];\n    for (let i = 0; i < emptySpaces.length; i++) {\n        var move = {};\n        move.index = emptySpaces[i];\n        var backup = currentBoardStateArr[emptySpaces[i]]\n        currentBoardStateArr[emptySpaces[i]] = player;\n        if (player === AI) {\n            var result = minimax(currentBoardStateArr, human);\n            move.score = result.score;\n        } else {\n            var result = minimax(currentBoardStateArr, AI);\n            move.score = result.score;\n        }\n        currentBoardStateArr[emptySpaces[i]] = backup\n        moves.push(move);\n    }\n    var bestMove;\n    if (player === AI) {\n        var bestScore = -10000;\n        for (var i = 0; i < moves.length; i++) {\n            if (moves[i].score > bestScore) {\n                bestScore = moves[i].score;\n                bestMove = i;\n            }\n        }\n    } else {\n        var bestScore = 10000;\n        for (var i = 0; i < moves.length; i++) {\n            if (moves[i].score < bestScore) {\n                bestScore = moves[i].score;\n                bestMove = i;\n            }\n        }\n    }\n    return moves[bestMove];\n}   ","import React, { Component } from 'react'\nimport Squares from './Squares'\nimport './game.css';\nimport { bestMove, checkIfWin, findEmptySpacesInArray, minimax } from './helper';\n\n\nclass Board extends Component {\n    state = {\n        moves: ['', '', '', '', '', '', '', '', ''],\n        nextPlayer: 'X',\n        winner: null,\n    };\n    players = ['X', 'O'];\n    restart = () => {\n        this.setState({\n            moves: ['', '', '', '', '', '', '', '', ''],\n            nextPlayer: 'X',\n            winner: null\n        })\n    }\n    AI = 'X';\n    HUMAN = 'O';\n    makeMove = (index, player) => {\n        if (this.state.winner === null) {\n            let nextPlayerTemp = player === this.AI ? this.HUMAN : this.AI;\n            const tempArr = [...this.state.moves];\n            if (tempArr[index - 1] === '') {\n                tempArr[index - 1] = player;\n                this.setState({ moves: [...tempArr], nextPlayer: nextPlayerTemp }, async () => {\n                    if (!checkIfWin(this.state.moves, player)) {\n                        findEmptySpacesInArray(this.state.moves).length > 0 && player === this.HUMAN && this.makeMove(bestMove(tempArr, this.AI).index + 1, this.AI)\n                        this.props.playerStatus(this.state.nextPlayer, null)\n                    } else {\n                        this.setState({ winner: player }, () => {\n                            this.props.playerStatus(this.state.nextPlayer, player)\n                        })\n                    }\n                })\n\n            } else {\n                alert('Already filled!!')\n            }\n        }\n\n    }\n\n    render() {\n        let i = 1, j = 1;\n        const movesArr = this.state.moves.map(element => {\n            return <Squares key={i++} index={j++} player={element} makeMove={this.makeMove} ></Squares>\n        })\n        return (\n            <div>\n                <div className=\"board\"  >\n                    {movesArr}\n\n                </div>\n                {findEmptySpacesInArray(this.state.moves).length === 0 || this.state.winner !== null && <div style={{ justifyContent: 'center', color: 'black' }}><p>Game over <span className=\"restartBtn\" style={{ color: 'red' }} onClick={this.restart}>Click here to Restart</span></p></div>}\n            </div>\n        )\n    }\n}\nexport default Board;\n","import React from 'react';\n\nclass GameInfo extends React.Component {\n    render() {\n        return (<div>\n            {this.props.playerRN && <p  style={{margin:'0'}}>Game Info: </p> }\n            {this.props.playerRN && <p style={{margin:'0'}}>Next player is: {this.props.playerRN} </p>}\n            {this.props.winner && <h3 style={{margin:'0'}}><b style={{color:'red',marginRight:'4px'}}>{this.props.winner}</b> is the winner !!</h3>}\n        </div>\n        );\n    }\n}\nexport default GameInfo;","import React, { Component } from 'react'\nimport Board from './Board'\nimport GameInfo from './GameInfo'\n\nexport default class App extends Component {\n    state={\n        currentPlayer:null,\n        won:null\n    }\n    checkCurrentPlayer = (player,won=null) => {\n        this.setState({currentPlayer:player})\n        if(won){\n        this.setState({won:won})\n        }\n    }\n    render() {\n        return (\n            <div  className=\"ui container\" style={{ justifyContent: 'center', textAlign: 'center',paddingTop:'30px'  }}>\n                <p> Unbeatable Tic-Tac-Toe </p>\n                <div  style={{ display: 'flex', justifyContent: 'center', position: 'relative'  }}>\n                    <Board playerStatus={this.checkCurrentPlayer} />\n                </div>\n                <GameInfo playerRN={this.state.currentPlayer}  winner={this.state.won} />\n            </div>\n        )\n\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App></App>,document.getElementById('root'));"],"sourceRoot":""}